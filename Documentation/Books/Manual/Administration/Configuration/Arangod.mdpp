!CHAPTER Command-Line Options for arangod

!SUBSECTION Enable/disable authentication  
@startDocuBlock server_authentication


!SUBSECTION Enable/disable authentication for UNIX domain sockets

disable authentication for requests via UNIX domain sockets
`--server.authentication-unix-sockets value`

Setting *value* to true will turn off authentication on the server side
for requests coming in via UNIX domain sockets. With this flag enabled,
clients located on the same host as the ArangoDB server can use UNIX domain
sockets to connect to the server without authentication.
Requests coming in by other means (e.g. TCP/IP) are not affected by this option.

The default value is *false*.

**Note**: this option is only available on platforms that support UNIX
domain sockets.

!SUBSECTION Enable/disable authentication for system API requests only
@startDocuBlock serverAuthenticateSystemOnly


!SUBSECTION Enable/disable replication applier

Enable/disable the replication applier on server startup
`--database.replication-applier flag`

If *false* the server will start with replication appliers turned off,
even if the replication appliers are configured with the *autoStart* option.
Using the command-line option will not change the value of the *autoStart*
option in the applier configuration, but will suppress auto-starting the
replication applier just once.

If the option is not used, ArangoDB will read the applier configuration
from the file *REPLICATION-APPLIER-CONFIG* on startup, and use the value of the
*autoStart* attribute from this file.

The default is *true*.

!SUBSECTION Keep-alive timeout

`--http.keep-alive-timeout`

Allows to specify the timeout for HTTP keep-alive connections. The timeout
value must be specified in seconds.
Idle keep-alive connections will be closed by the server automatically
when the timeout is reached. A keep-alive-timeout value 0 will disable the keep
alive feature entirely.

!SUBSECTION Hide Product header

hide the "Server: ArangoDB" header in HTTP responses
`--http.hide-product-header`

If *true*, the server will exclude the HTTP header "Server: ArangoDB" in
HTTP responses. If set to *false*, the server will send the header in
responses.

The default is *false*.

!SUBSECTION Allow method override

`--http.allow-method-override`

When this option is set to *true*, the HTTP request method will optionally
be fetched from one of the following HTTP request headers if present in
the request:

- *x-http-method*
- *x-http-method-override*
- *x-method-override*

If the option is set to *true* and any of these headers is set, the
request method will be overridden by the value of the header. For example,
this allows issuing an HTTP DELETE request which to the outside world will
look like an HTTP GET request. This allows bypassing proxies and tools that
will only let certain request types pass.

Setting this option to *true* may impose a security risk so it should only
be used in controlled environments.

The default value for this option is *false*.

!SUBSECTION Server threads

`--server.threads number`

Specifies the *number* of threads that are spawned to handle HTTP REST
requests.

!SUBSECTION Toggling server statistics 

`--server.statistics value`

If this option is *value* is *false*, then ArangoDB's statistics gathering
is turned off. Statistics gathering causes regular CPU activity so using this
option to turn it off might relieve heavy-loaded instances a bit.

!SUBSECTION Session timeout

time to live for server sessions
`--server.session-timeout value`

The timeout for web interface sessions, using for authenticating requests
to the web interface (/_admin/aardvark) and related areas.

Sessions are only used when authentication is turned on.

!SUBSECTION Foxx queues 
@startDocuBlock foxxQueues

!SUBSECTION Foxx queues poll interval
@startDocuBlock foxxQueuesPollInterval

!SUBSECTION Directory

`--database.directory directory`

The directory containing the collections and datafiles. Defaults
to */var/lib/arango*. When specifying the database directory, please
make sure the directory is actually writable by the arangod process.

You should further not use a database directory which is provided by a
network filesystem such as NFS. The reason is that networked filesystems
might cause inconsistencies when there are multiple parallel readers or
writers or they lack features required by arangod (e.g. flock()).

`directory`

When using the command line version, you can simply supply the database
directory as argument.


**Examples**


```
> ./arangod --server.endpoint tcp://127.0.0.1:8529 --database.directory
/tmp/vocbase
```



!SUBSECTION Journal size
@startDocuBlock databaseMaximalJournalSize


!SUBSECTION Wait for sync
@startDocuBlock databaseWaitForSync


!SUBSECTION Force syncing of properties
@startDocuBlock databaseForceSyncProperties


!SUBSECTION Enable/disable AQL query tracking


disable the query tracking feature
`--query.tracking flag`

If *true*, the server's AQL slow query tracking feature will be enabled by
default. Tracking of queries can be disabled by setting the option to *false*.

The default is *true*.


!SUBSECTION Threshold for slow AQL queries


adjust the threshold for slow AQL queries
`--query.slow-threshold value`

By setting *value* it can be controlled after what execution time an AQL query
is considered "slow". Any slow queries that exceed the execution time specified
in *value* will be logged when they are finished. The threshold value is
specified in seconds. Tracking of slow queries can be turned off entirely by
setting the option `--query.tracking` to *false*.

The default value is *10.0*.



!SUBSECTION Throw collection not loaded error


throw collection not loaded error
`--database.throw-collection-not-loaded-error flag`

Accessing a not-yet loaded collection will automatically load a collection
on first access. This flag controls what happens in case an operation
would need to wait for another thread to finalize loading a collection. If
set to *true*, then the first operation that accesses an unloaded collection
will load it. Further threads that try to access the same collection while
it is still loading will get an error (1238, *collection not loaded*). When
the initial operation has completed loading the collection, all operations
on the collection can be carried out normally, and error 1238 will not be
thrown.

If set to *false*, the first thread that accesses a not-yet loaded collection
will still load it. Other threads that try to access the collection while
loading will not fail with error 1238 but instead block until the collection
is fully loaded. This configuration might lead to all server threads being
blocked because they are all waiting for the same collection to complete
loading. Setting the option to *true* will prevent this from happening, but
requires clients to catch error 1238 and react on it (maybe by scheduling
a retry for later).

The default value is *false*.



!SUBSECTION AQL Query caching mode


whether or not to enable the AQL query result cache
`--query.cache-mode`

Toggles the AQL query cache behavior. Possible values are:

* *off*: do not use query cache
* *on*: always use query cache, except for queries that have their *cache*
  attribute set to *false*
* *demand*: use query cache only for queries that have their *cache*
  attribute set to *true*
  set



!SUBSECTION AQL Query cache size 


maximum number of elements in the query cache per database
`--query.cache-entries`

Maximum number of query results that can be stored per database-specific
query cache. If a query is eligible for caching and the number of items in
the database's query cache is equal to this threshold value, another cached
query result will be removed from the cache.

This option only has an effect if the query cache mode is set to either
*on* or *demand*.



!SUBSECTION Index threads


number of background threads for parallel index creation
`--database.index-threads`

Specifies the *number* of background threads for index creation. When a
collection contains extra indexes other than the primary index, these other
indexes can be built by multiple threads in parallel. The index threads
are shared among multiple collections and databases. Specifying a value of
*0* will turn off parallel building, meaning that indexes for each collection
are built sequentially by the thread that opened the collection.
If the number of index threads is greater than 1, it will also be used to
built the edge index of a collection in parallel (this also requires the
edge index in the collection to be split into multiple buckets).



!SUBSECTION V8 contexts


number of V8 contexts for executing JavaScript actions
`--javascript.v8-contexts number`

Specifies the *number* of V8 contexts that are created for executing
JavaScript code. More contexts allow execute more JavaScript actions in
parallel, provided that there are also enough threads available. Please
note that each V8 context will use a substantial amount of memory and
requires periodic CPU processing time for garbage collection.



!SUBSECTION Garbage collection frequency (time-based)


JavaScript garbage collection frequency (each x seconds)
`--javascript.gc-frequency frequency`

Specifies the frequency (in seconds) for the automatic garbage collection of
JavaScript objects. This setting is useful to have the garbage collection
still work in periods with no or little numbers of requests.



!SUBSECTION Garbage collection interval (request-based)


JavaScript garbage collection interval (each x requests)
`--javascript.gc-interval interval`

Specifies the interval (approximately in number of requests) that the
garbage collection for JavaScript objects will be run in each thread.



!SUBSECTION V8 options


optional arguments to pass to v8
`--javascript.v8-options options`

Optional arguments to pass to the V8 Javascript engine. The V8 engine will
run with default settings unless explicit options are specified using this
option. The options passed will be forwarded to the V8 engine which will
parse them on its own. Passing invalid options may result in an error being
printed on stderr and the option being ignored.

Options need to be passed in one string, with V8 option names being prefixed
with double dashes. Multiple options need to be separated by whitespace.
To get a list of all available V8 options, you can use
the value *"--help"* as follows:
```
--javascript.v8-options "--help"
```

Another example of specific V8 options being set at startup:

```
--javascript.v8-options "--log"
```

Names and features or usable options depend on the version of V8 being used,
and might change in the future if a different version of V8 is being used
in ArangoDB. Not all options offered by V8 might be sensible to use in the
context of ArangoDB. Use the specific options only if you are sure that
they are not harmful for the regular database operation.

