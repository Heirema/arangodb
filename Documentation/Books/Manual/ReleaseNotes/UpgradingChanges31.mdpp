!CHAPTER Incompatible changes in ArangoDB 3.1

It is recommended to check the following list of incompatible changes **before**
upgrading to ArangoDB 3.1, and adjust any client programs if necessary.

!SECTION Communication Layer

The internal commication layer is now based on Boost ASIO. A few options
regarding threads and communication have been changed.

There are no longer two different threads pools (`--scheduler.threads` and
`--server.threads`). The option `--scheduler.threads` has been removed. The 
number of threads is now controlled by the option `--server.threads` only.
By default `--server.threads` is set to the number of hyper-cores.

As a consequence of the change, the following (hidden) startup options have 
been removed:

* `--server.extra-threads`
* `--server.aql-threads`
* `--server.backend`
* `--server.show-backends`
* `--server.thread-affinity`

!SECTION AQL
 
The behavior of the AQL array comparison operators has changed for empty arrays:

* `ALL` and `ANY` now always return `false` when the left-hand operand is an
  empty array. The behavior for non-empty arrays does not change:
  * `[] ALL == 1` will return `false`
  * `[1] ALL == 1` will return `true`
  * `[1, 2] ALL == 1` will return `false`
  * `[2, 2] ALL == 1` will return `false`
  * `[] ANY == 1` will return `false`
  * `[1] ANY == 1` will return `true`
  * `[1, 2] ANY == 1` will return `true`
  * `[2, 2] ANY == 1` will return `false`

* `NONE` now always returns `true` when the left-hand operand is an empty array.
  The behavior for non-empty arrays does not change:
  * `[] NONE == 1` will return `true`
  * `[1] NONE == 1` will return `false`
  * `[1, 2] NONE == 1` will return `false`
  * `[2, 2] NONE == 1` will return `true`

!SECTION Data format changes

The attribute `maximalSize` has been renamed to `journalSize` in collection
meta-data files ("parameter.json"). Files containing the `maximalSize` attribute 
will still be picked up correctly for not-yet adjusted collections.

The format of the revision values stored in the `_rev` attribute of documents
has been changed in 3.1. Up to 3.0 they were strings containing largish decimal numbers. With 3.1, revision values are still strings, but are actually encoded time stamps of the creation date of the revision of the document. The time stamps are acquired using a hybrid logical clock (HLC) on the DBserver that holds the
revision (for the concept of a hybrid logical clock see 
[this paper](http://www.cse.buffalo.edu/tech-reports/2014-04.pdf)).
See [this manual section](../DataModeling/Documents/DocumentAddress.html#document-revision) for details.

ArangoDB >= 3.1 can ArangoDB 3.0 database directories and will simply continue
to use the old `_rev` attribute values. New revisions will be written with
the new time stamps.

It is highly recommended to backup all your data before loading a database
directory that was written by ArangoDB <= 3.0 into an ArangoDB >= 3.1.

To change all your old `_rev` attributes into new style time stamps you
have to use `arangodump` to dump all data out (using ArangoDB 3.0), and 
use `arangorestore` into the new ArangoDB 3.1, which is the safest
way to upgrade.

!SECTION HTTP API changes

!SUBSECTION APIs added

The following HTTP REST APIs have been added for online loglevel adjustment of
the server:

* GET `/_admin/log/level` returns the current loglevel settings
* PUT `/_admin/log/level` modifies the current loglevel settings

!SUBSECTION APIs changed

The replication API will now use the attribute name `journalSize` instead of
`maximalSize` when returning information about collections.

The default value for `keepNull` has been changed to `true` for edge and vertex
modification operations in /_api/gharial.
